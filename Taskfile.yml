version: '3'

includes:
  aws: ./Taskfile.aws.yml
  terraform: ./Taskfile.terraform.yml
  docker: ./Taskfile.docker.yml

tasks:
  default:
    cmds:
      - task -l
    desc: Lists all available tasks

  dev:setup:
    desc: Sets up the development environment
    cmds:
      - echo "Setting up development environment..."
      - direnv allow
    
  build:all:
    desc: Build all services
    deps: [docker:build]
    
  run:all:
    desc: Run all services
    deps: [docker:up]
    
  stop:all:
    desc: Stop all services
    deps: [docker:down]
    
  docs:serve:
    desc: Serve the documentation locally and open in browser
    cmds:
      - |
        # Start mkdocs server in background
        mkdocs serve --dev-addr=127.0.0.1:8000 &
        SERVER_PID=$!
        
        # Wait a moment for the server to start
        sleep 2
        
        # Open browser based on OS
        if [ "$(uname)" == "Darwin" ]; then
          # macOS
          open http://127.0.0.1:8000
        elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
          # Linux - try various commands
          xdg-open http://127.0.0.1:8000 || sensible-browser http://127.0.0.1:8000 || x-www-browser http://127.0.0.1:8000 || gnome-open http://127.0.0.1:8000 || echo "Please open http://127.0.0.1:8000 in your browser"
        elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ] || [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
          # Windows via Git Bash
          start http://127.0.0.1:8000 || echo "Please open http://127.0.0.1:8000 in your browser"
        else
          echo "Please open http://127.0.0.1:8000 in your browser"
        fi
        
        # Bring back server process to foreground
        wait $SERVER_PID
      
  docs:build:
    desc: Build the documentation site
    cmds:
      - mkdocs build
      
  docs:deploy:
    desc: Deploy the documentation to GitHub Pages
    cmds:
      - mkdocs gh-deploy --force